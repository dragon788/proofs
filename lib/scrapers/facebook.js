// Generated by IcedCoffeeScript 1.8.0-e
(function() {
  var BaseScraper, FacebookScraper, constants, v_codes,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseScraper = require('./base').BaseScraper;

  constants = require('../constants').constants;

  v_codes = constants.v_codes;

  exports.FacebookScraper = FacebookScraper = (function(_super) {
    __extends(FacebookScraper, _super);

    function FacebookScraper(opts) {
      FacebookScraper.__super__.constructor.call(this, opts);
    }

    FacebookScraper.prototype._check_args = function(args) {
      if (!(args.username != null)) {
        return new Error("Bad args to Facebook proof: no username given");
      } else if (!(args.name != null) || (args.name !== 'facebook')) {
        return new Error("Bad args to Facebook proof: type is " + args.name);
      } else {
        return null;
      }
    };

    FacebookScraper.prototype.hunt2 = function(_arg, cb) {
      var err, name, proof_text_check, username;
      username = _arg.username, proof_text_check = _arg.proof_text_check, name = _arg.name;
      err = new Error("hunt2 is a no-op for Facebook");
      return cb(err, null);
    };

    FacebookScraper.prototype._check_api_url = function(_arg) {
      var api_url, rxx, username;
      api_url = _arg.api_url, username = _arg.username;
      rxx = new RegExp("^https://facebook.com/" + username + "/posts/", "i");
      return (api_url != null) && api_url.match(rxx);
    };

    FacebookScraper.prototype.check_status = function(_arg, cb) {
      var api_url, proof_text_check, remote_id, username;
      username = _arg.username, api_url = _arg.api_url, proof_text_check = _arg.proof_text_check, remote_id = _arg.remote_id;
      return cb(null, v_codes.NOT_FOUND);
    };

    FacebookScraper.prototype._get_body = function(url, json, cb) {
      var args;
      this.log("| HTTP request for URL '" + url + "'");
      args = {
        url: url
      };
      if (json) {
        args.json = 1;
      }
      return this._get_url_body(args, cb);
    };

    return FacebookScraper;

  })(BaseScraper);

}).call(this);
